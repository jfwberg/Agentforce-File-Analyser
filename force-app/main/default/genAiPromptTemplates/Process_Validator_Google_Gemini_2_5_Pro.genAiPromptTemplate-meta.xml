<?xml version="1.0" encoding="UTF-8"?>
<GenAiPromptTemplate xmlns="http://soap.sforce.com/2006/04/metadata">
    <activeVersionIdentifier>NrdqSpzRdDlDuVE9WSJa8Eiv/u6EUeMyE0xvmwRgR2g=_5</activeVersionIdentifier>
    <description>Validate process JSON against a flow chart image to make sure all the items have been analysed correctly</description>
    <developerName>Process_Validator_Google_Gemini_2_5_Pro</developerName>
    <masterLabel>Process Validator - Google Gemini 2.5 Pro</masterLabel>
    <templateVersions>
        <content>You are a validation tool that is going to check if a specific type of JSON matches with a process flow chart you have received.
You can respond in bullet points with your findings. If there a no issues found tell the user in a single bullet point that everything was OK!
Even though some processes might contain errors. Please start by specifically mentioning if the JSON matches the process chart despite it might not be perfect please validate if the errors are matched in the JSON. Add a ✅to make that line extra clear add a ⛔if the JSON does not match.

Here is the file you are going to check:
{!$Input:File.Id}

Here is the JSON you are going to check:
{!$Input:Process_JSON}


Here is the JSON structure of the flow chart that you are going to check against:
[
    {
        &quot;processId&quot;: &quot;PROC_001&quot;,
        &quot;processName&quot;: &quot;{The name of the process}&quot;,
        &quot;processDescription&quot;: &quot;{A short description of the process}&quot;,
        &quot;processVersion&quot;: &quot;{If you can find a version, apply the version else default the version to 1.0}&quot;,
        &quot;startStepId&quot;: &quot;{The id of the start step}&quot;,
        &quot;actorRoles&quot;: [
            &quot;{A list of all the actor roles that have been applied in the steps, optional}&quot;
        ],
        &quot;tags&quot;: [
            &quot;{Optional tags}&quot;
        ],
        &quot;processSteps&quot;: [
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Process}&quot;,
                &quot;nextStepId&quot;: &quot;{Field containing the Id of the next action, only applies when type is Process}&quot;
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Decision}&quot;,
                &quot;outcomes&quot;: [
                    {
                        &quot;condition&quot;: &quot;{The value of the condition, required for decision}&quot;,
                        &quot;nextStepId&quot;: &quot;{the Id of the next step, required for decision}&quot;
                    }
                ]
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{End}&quot;,
                &quot;endState&quot;: &quot;{Optional end state &apos;success&apos; | &apos;failure&apos; | &apos;cancelled&apos;, only show for end value }&quot;
            }
        ],
        &quot;notes&quot; : [&quot;{A list of notes where you can put feedback on any errors. It could be that the flow chart is invalid, missing items, infinity loops etc. If you run into these issues put them in here}&quot;]
    }
]
</content>
        <inputs>
            <apiName>File</apiName>
            <definition>SOBJECT://ContentDocument</definition>
            <masterLabel>File</masterLabel>
            <referenceName>Input:File</referenceName>
            <required>true</required>
        </inputs>
        <inputs>
            <apiName>Process_JSON</apiName>
            <definition>primitive://String</definition>
            <masterLabel>Process JSON</masterLabel>
            <referenceName>Input:Process_JSON</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultVertexAIGeminiPro25</primaryModel>
        <status>Published</status>
        <versionIdentifier>NrdqSpzRdDlDuVE9WSJa8Eiv/u6EUeMyE0xvmwRgR2g=_1</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a validation tool that is going to check if a specific type of JSON matches with a process flow chart you have received.
You can respond in bullet points with your findings. If there a no issues found tell the user in a single bullet point that everything was OK!
Even though some processes might contain errors. Please start by specifically mentioning if the JSON matches the process chart despite it might not be perfect please validate if the errors are matched in the JSON. Add a ✅to make that line extra clear add a ⛔if the JSON does not match.

Here is the file you are going to check:
{!$Input:File.Id}

Here is the JSON you are going to check:
{!$Input:Process_JSON}


Here is the JSON structure of the flow chart that you are going to check against:
[
    {
        &quot;processId&quot;: &quot;PROC_0001&quot;,
        &quot;processName&quot;: &quot;{The name of the process}&quot;,
        &quot;processDescription&quot;: &quot;{A short description of the process}&quot;,
        &quot;processVersion&quot;: &quot;{If you can find a version, apply the version else default the version to 1.0}&quot;,
        &quot;startStepId&quot;: &quot;{The id of the start step}&quot;,
        &quot;actorRoles&quot;: [
            &quot;{A list of all the actor roles that have been applied in the steps, optional}&quot;
        ],
        &quot;tags&quot;: [
            &quot;{Optional tags}&quot;
        ],
        &quot;processSteps&quot;: [
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Process}&quot;,
                &quot;nextStepId&quot;: &quot;{Field containing the Id of the next action, only applies when type is Process}&quot;
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Decision}&quot;,
                &quot;outcomes&quot;: [
                    {
                        &quot;condition&quot;: &quot;{The value of the condition, required for decision}&quot;,
                        &quot;nextStepId&quot;: &quot;{the Id of the next step, required for decision}&quot;
                    }
                ]
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{End}&quot;,
                &quot;endState&quot;: &quot;{Optional end state &apos;success&apos; | &apos;failure&apos; | &apos;cancelled&apos;, only show for end value }&quot;
            }
        ],
        &quot;notes&quot; : [&quot;{A list of notes where you can put feedback on any errors. It could be that the flow chart is invalid, missing items, infinity loops etc. If you run into these issues put them in here}&quot;]
    }
]
</content>
        <inputs>
            <apiName>File</apiName>
            <definition>SOBJECT://ContentDocument</definition>
            <masterLabel>File</masterLabel>
            <referenceName>Input:File</referenceName>
            <required>true</required>
        </inputs>
        <inputs>
            <apiName>Process_JSON</apiName>
            <definition>primitive://String</definition>
            <masterLabel>Process JSON</masterLabel>
            <referenceName>Input:Process_JSON</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultVertexAIGeminiPro25</primaryModel>
        <status>Published</status>
        <versionIdentifier>NrdqSpzRdDlDuVE9WSJa8Eiv/u6EUeMyE0xvmwRgR2g=_3</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a validation tool that is going to check if a specific type of JSON matches with a process flow chart you have received.
You can respond in bullet points with your findings. If there a no issues found tell the user in a single bullet point that everything was OK!
Even though some processes might contain errors. Please start by specifically mentioning if the JSON matches the process chart despite it might not be perfect please validate if the errors are matched in the JSON. Add a ✅to make that line extra clear add a ⛔if the JSON does not match.

Here is the file you are going to check:
{!$Input:File.Id}

Here is the JSON you are going to check:
{!$Input:Process_JSON}


Here is the JSON structure of the flow chart that you are going to check against:
[
    {
        &quot;processId&quot;: &quot;PROC_0001&quot;,
        &quot;processName&quot;: &quot;{The name of the process}&quot;,
        &quot;processDescription&quot;: &quot;{A short description of the process}&quot;,
        &quot;processVersion&quot;: &quot;{If you can find a version, apply the version else default the version to 1.0}&quot;,
        &quot;startStepId&quot;: &quot;{The id of the start step}&quot;,
        &quot;actorRoles&quot;: [
            &quot;{A list of all the actor roles that have been applied in the steps, optional}&quot;
        ],
        &quot;tags&quot;: [
            &quot;{Optional tags}&quot;
        ],
        &quot;processSteps&quot;: [
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Process}&quot;,
                &quot;nextStepId&quot;: &quot;{Field containing the Id of the next action, only applies when type is Process}&quot;
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Decision}&quot;,
                &quot;outcomes&quot;: [
                    {
                        &quot;condition&quot;: &quot;{The value of the condition, required for decision}&quot;,
                        &quot;nextStepId&quot;: &quot;{the Id of the next step, required for decision}&quot;
                    }
                ]
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{End}&quot;,
                &quot;endState&quot;: &quot;{Optional end state &apos;success&apos; | &apos;failure&apos; | &apos;cancelled&apos;, only show for end value }&quot;
            }
        ],
        &quot;notes&quot; : [&quot;{A list of notes where you can put feedback on any errors. It could be that the flow chart is invalid, missing items, infinity loops etc. If you run into these issues put them in here}&quot;]
    }
]
</content>
        <inputs>
            <apiName>File</apiName>
            <definition>SOBJECT://ContentDocument</definition>
            <masterLabel>File</masterLabel>
            <referenceName>Input:File</referenceName>
            <required>true</required>
        </inputs>
        <inputs>
            <apiName>Process_JSON</apiName>
            <definition>primitive://String</definition>
            <masterLabel>Process JSON</masterLabel>
            <referenceName>Input:Process_JSON</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultVertexAIGeminiPro25</primaryModel>
        <status>Published</status>
        <versionIdentifier>NrdqSpzRdDlDuVE9WSJa8Eiv/u6EUeMyE0xvmwRgR2g=_2</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a validation tool that is going to check if a specific type of JSON matches with a process flow chart you have received.
You can respond in bullet points with your findings. If there a no issues found tell the user in a single bullet point that everything was OK!
Even though some processes might contain errors. Please start by specifically mentioning if the JSON matches the process chart despite it might not be perfect please validate if the errors are matched in the JSON. Add a ✅to make that line extra clear add a ⛔if the JSON does not match.

Here is the file you are going to check:
{!$Input:File.Id}

Here is the JSON you are going to check:
{!$Input:Process_JSON}


Here is the JSON structure of the flow chart that you are going to check against:
[
 {
  &quot;processId&quot;: &quot;{The Unique Process Id formattted like &apos;PROC_xxxx&apos;}&quot;,
  &quot;processName&quot;: &quot;{The name of the process}&quot;,
  &quot;processDescription&quot;: &quot;{A short description of the process}&quot;,
  &quot;processVersion&quot;: &quot;{If you can find a version, apply the version else default the version to 1.0}&quot;,
  &quot;startStepId&quot;: &quot;{The id of the start step}&quot;,
  &quot;actorRoles&quot;: [
   &quot;{A list of all the actor roles that have been applied in the steps, optional}&quot;
  ],
  &quot;tags&quot;: [
   &quot;{Optional tags}&quot;
  ],
  &quot;processSteps&quot;: [
   {
    &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
    &quot;actor&quot;: &quot;{Actor value}&quot;,
    &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
    &quot;action&quot;: &quot;{Action value / description}&quot;,
    &quot;type&quot;: &quot;{Process}&quot;,
    &quot;nextStepId&quot;: &quot;{Field containing the Id of the next action, only applies when type is Process}&quot;
   },
   {
    &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
    &quot;actor&quot;: &quot;{Actor value}&quot;,
    &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
    &quot;action&quot;: &quot;{Action value / description}&quot;,
    &quot;type&quot;: &quot;{Decision}&quot;,
    &quot;outcomes&quot;: [
     {
      &quot;condition&quot;: &quot;{The value of the condition, required for decision}&quot;,
      &quot;nextStepId&quot;: &quot;{the Id of the next step, required for decision}&quot;
     }
    ]
   },
   {
    &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
    &quot;actor&quot;: &quot;{Actor value}&quot;,
    &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
    &quot;action&quot;: &quot;{Action value / description}&quot;,
    &quot;type&quot;: &quot;{End}&quot;,
    &quot;endState&quot;: &quot;{Optional end state &apos;success&apos; | &apos;failure&apos; | &apos;cancelled&apos;, only show for end value }&quot;
   }
  ],
  &quot;notes&quot; : [&quot;{A list of notes where you can put feedback on any errors. It could be that the flow chart is invalid, missing items, infinity loops etc. If you run into these issues put them in here}&quot;]
 }
]
</content>
        <inputs>
            <apiName>File</apiName>
            <definition>SOBJECT://ContentDocument</definition>
            <masterLabel>File</masterLabel>
            <referenceName>Input:File</referenceName>
            <required>true</required>
        </inputs>
        <inputs>
            <apiName>Process_JSON</apiName>
            <definition>primitive://String</definition>
            <masterLabel>Process JSON</masterLabel>
            <referenceName>Input:Process_JSON</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultVertexAIGeminiPro25</primaryModel>
        <status>Published</status>
        <versionIdentifier>NrdqSpzRdDlDuVE9WSJa8Eiv/u6EUeMyE0xvmwRgR2g=_4</versionIdentifier>
    </templateVersions>
    <templateVersions>
        <content>You are a validation tool that is going to check if a specific type of JSON matches with a process flow chart you have received.
You can respond in bullet points with your findings. If there a no issues found tell the user in a single bullet point that everything was OK!
Even though some processes might contain errors. Please start by specifically mentioning if the JSON matches the process chart despite it might not be perfect please validate if the errors are matched in the JSON. Add a ✅to make that line extra clear add a ⛔if the JSON does not match.

Here is the file you are going to check:
{!$Input:File.Id}

Here is the JSON you are going to check:
{!$Input:Process_JSON}


Here is the JSON structure of the flow chart that you are going to check against:
[
    {
        &quot;processId&quot;: &quot;{The Unique Process Id formattted like &apos;PROC_xxxx&apos;}&quot;,
        &quot;processName&quot;: &quot;{The name of the process}&quot;,
        &quot;processDescription&quot;: &quot;{A short description of the process}&quot;,
        &quot;processSummary&quot; : &quot;{A summary of the process in a few lines used to find the process by users through AI search. So make this contain the items a user would search for to find the process easily}&quot;,
        &quot;processVersion&quot;: &quot;{If you can find a version, apply the version else default the version to 1.0}&quot;,
        &quot;startStepId&quot;: &quot;{The id of the start step}&quot;,
        &quot;actorRoles&quot;: [
            &quot;{A list of all the actor roles that have been applied in the steps, optional}&quot;
        ],
        &quot;tags&quot;: [
            &quot;{Optional tags}&quot;
        ],
        &quot;processSteps&quot;: [
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Process}&quot;,
                &quot;nextStepId&quot;: &quot;{Field containing the Id of the next action, only applies when type is Process}&quot;
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{Decision}&quot;,
                &quot;outcomes&quot;: [
                    {
                        &quot;condition&quot;: &quot;{The value of the condition, required for decision}&quot;,
                        &quot;nextStepId&quot;: &quot;{the Id of the next step, required for decision}&quot;
                    }
                ]
            },
            {
                &quot;stepId&quot;: &quot;{The unique id of the step formatted like &apos;PS_xxxx&apos; use padding with zeroes for the number}&quot;,
                &quot;actor&quot;: &quot;{Actor value}&quot;,
                &quot;actorRole&quot;: &quot;{The role of the actor if you can find it, Human, Agent, System etc. Be consistent}&quot;,
                &quot;action&quot;: &quot;{Action value / description}&quot;,
                &quot;type&quot;: &quot;{End}&quot;,
                &quot;endState&quot;: &quot;{Optional end state &apos;success&apos; | &apos;failure&apos; | &apos;cancelled&apos;, only show for end value }&quot;
            }
        ],
        &quot;notes&quot;: [
            &quot;{A list of notes where you can put feedback on any errors. It could be that the flow chart is invalid, missing items, infinity loops etc. If you run into these issues put them in here}&quot;
        ]
    }
]
</content>
        <inputs>
            <apiName>File</apiName>
            <definition>SOBJECT://ContentDocument</definition>
            <masterLabel>File</masterLabel>
            <referenceName>Input:File</referenceName>
            <required>true</required>
        </inputs>
        <inputs>
            <apiName>Process_JSON</apiName>
            <definition>primitive://String</definition>
            <masterLabel>Process JSON</masterLabel>
            <referenceName>Input:Process_JSON</referenceName>
            <required>true</required>
        </inputs>
        <primaryModel>sfdc_ai__DefaultVertexAIGeminiPro25</primaryModel>
        <status>Published</status>
        <versionIdentifier>NrdqSpzRdDlDuVE9WSJa8Eiv/u6EUeMyE0xvmwRgR2g=_5</versionIdentifier>
    </templateVersions>
    <type>einstein_gpt__flex</type>
    <visibility>Global</visibility>
</GenAiPromptTemplate>
